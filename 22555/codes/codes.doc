# shape_trans.py #
ls = IterateList2D(Cat,(0.1,0.34),100)
normal plot (connect dots with lines): plot(ls[:,0],[:,1])
scatter plot: plot(ls[:,0],[:,1],'o')

- cla() to clear plot

# point representation
sq10 = BasicShape('square', 0.81, 10, 'linear', 0.3, 1) # create a boundary representation of a square of area 0.81; 10*4=40 points total; height 0.3; wall determined by y=1*x
sq10 = BasicShape('circle', 0.81, 40, 'linear', 0.3, 1) # create a boundary representation of a circle of area 0.81; 40 points total; height 0.3; wall determined by y=1*x
sq10.wall_func(3) # figure out the points on a wall corresponding to height 3
sq10.xyzxyz() # return the points on the bottom and top.
sq10.show()
sq10.save()

# cover representation
sq9 = Shape('square', 0.81, 9) # create a cover of a square
cvplot(sq9) # plot the cover of a square
len(sq9) # the number of patches
cvplot(IterateN(vCat,sq,10,2)) # iterate Cat map with parameter 2, 10 times.
cvplot(IterRand(sq,10)) # randomly iterate Cat map or Kick map 10 times

# batch processing
# GenShape(func, area~must be a square of something, resolution, #of iterations)
GenShape(vCat, 0.64, 12, 10)
